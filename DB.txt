DROP VIEW productList;
DROP TABLE products;
DROP TABLE store; 
DROP TABLE documents;

DROP TABLE user; 
DROP TABLE worker;
DROP TABLE colorDict;
DROP TABLE documentDict;
DROP TABLE finishDict;
DROP TABLE materialDict;
DROP TABLE productDict;
DROP TABLE typeDict;
DROP TABLE unitDict;
DROP TABLE stateDict;


CREATE TABLE colorDict (
    id int not null unique auto_increment primary key,
    name varchar(255)
);

CREATE TABLE documentDict (
    id int not null unique auto_increment primary key,
    name varchar(255)
);

CREATE TABLE finishDict (
    id int not null unique auto_increment primary key,
    name varchar(255)
);

CREATE TABLE materialDict (
    id int not null unique auto_increment primary key,
    name varchar(255)
);

CREATE TABLE productDict (
    id int not null unique auto_increment primary key,
    name varchar(255)
);

CREATE TABLE typeDict (
    id int not null unique auto_increment primary key,
    name varchar(255)
);

CREATE TABLE unitDict (
    id int not null unique auto_increment primary key,
    name varchar(255)
);

CREATE TABLE stateDict (
    id int not null unique auto_increment primary key,
    name varchar(255)
);

SET SESSION SQL_MODE = "NO_AUTO_VALUE_ON_ZERO";
INSERT INTO colorDict VALUES ('0', NULL);
INSERT INTO documentDict VALUES ('0', NULL);
INSERT INTO finishDict VALUES ('0', NULL);
INSERT INTO materialDict VALUES ('0', NULL);
INSERT INTO productDict VALUES ('0', NULL);
INSERT INTO typeDict VALUES ('0', NULL);
INSERT INTO unitDict VALUES ('0', NULL);
INSERT INTO stateDict VALUES ('0', NULL);
INSERT INTO user VALUES ('0', 'Default', NULL);

create table product (
    id int not null auto_increment unique primary key,
    name int not null,
    type int not null,
    material int not null,
    finish int not null,
    color int not null,
    unit int not null,
    symbol varchar(255),
    alarm_min int,
    alarm_max int,
    photo varchar(255),
    comment varchar(255),
    upw float,
    foreign key (name) references productDict(id) ON DELETE CASCADE,
    foreign key (type) references typeDict(id) ON DELETE CASCADE,
    foreign key (material) references materialDict(id) ON DELETE CASCADE,
    foreign key (finish) references finishDict(id) ON DELETE CASCADE,
    foreign key (color) references colorDict(id) ON DELETE CASCADE,
    foreign key (unit) references unitDict(id) ON DELETE CASCADE
    );

CREATE VIEW productList AS
   SELECT
    product.id,
    concat_ws(' ',
        productDict.name, typeDict.name, materialDict.name, 
	finishDict.name, colorDict.name
    ) AS name,
    product.symbol,
    product.alarm_min,
    product.alarm_max,
    product.comment,
    product.upw,
    unitDict.name as unit
FROM product
INNER JOIN productDict ON productDict.id = product.name
INNER JOIN typeDict ON typeDict.id = product.type
INNER JOIN materialDict ON materialDict.id = product.material
INNER JOIN finishDict ON finishDict.id = product.finish
INNER JOIN colorDict ON colorDict.id = product.color
INNER JOIN unitDict ON unitDict.id = product.unit;

CREATE VIEW productName AS
    SELECT
      product.id,
      concat_ws(' ',
         productDict.name, typeDict.name, materialDict.name,
         finishDict.name, colorDict.name
       ) AS name
    FROM product
INNER JOIN productDict ON productDict.id = product.name
INNER JOIN typeDict ON typeDict.id = product.type
INNER JOIN materialDict ON materialDict.id = product.material
INNER JOIN finishDict ON finishDict.id = product.finish
INNER JOIN colorDict ON colorDict.id = product.color;


CREATE TABLE document (
        id INT UNIQUE NOT NULL AUTO_INCREMENT PRIMARY KEY, 
        number VARCHAR(255) NOT NULL,
        date DATE NOT NULL, 
        type INT NOT NULL, 
        FOREIGN KEY (type) REFERENCES  documentDict(id) ON DELETE CASCADE
);

CREATE VIEW documentList AS
    SELECT
        document.id,
        document.date,
        document.number,
        documentDict.name as type
    FROM document
    INNER JOIN documentDict ON documentDict.id = document.type;

CREATE TABLE store (
	id INT UNIQUE NOT NULL AUTO_INCREMENT PRIMARY KEY, 
        product INT NOT NULL,
	quantity FLOAT NOT NULL, 
	date DATETIME NOT NULL, 
	document INT NOT NULL, 
        user INT NOT NULL,
        FOREIGN KEY (product) REFERENCES product(id) ON DELETE CASCADE,
        FOREIGN KEY (document) REFERENCES document(id) ON DELETE CASCADE,
        FOREIGN KEY (user) REFERENCES user(id) ON DELETE CASCADE
);

CREATE VIEW storeCount AS
    SELECT
        product AS product,
        SUM(quantity) AS qty
    FROM store GROUP BY product;

CREATE VIEW storeQty AS
  SELECT
    product.id,
    concat_ws(' ',
        productDict.name, typeDict.name, materialDict.name,
        finishDict.name, colorDict.name
    ) AS name,
    product.symbol,
    storeCount.qty,
    unitDict.name as unit,
    product.alarm_min,
    product.alarm_max,
    product.comment
FROM product
INNER JOIN productDict ON productDict.id = product.name
INNER JOIN typeDict ON typeDict.id = product.type
INNER JOIN materialDict ON materialDict.id = product.material
INNER JOIN finishDict ON finishDict.id = product.finish
INNER JOIN colorDict ON colorDict.id = product.color
INNER JOIN unitDict ON unitDict.id = product.unit
INNER JOIN storeCount ON storeCount.product = product.id;


CREATE VIEW storeTransaction AS
  SELECT
    store.id,
    productName.name AS product,
    product.symbol,
    store.quantity,
    store.date,
    document.number,
    user.name AS user,
    unitDict.name as unit
FROM store
INNER JOIN product ON product.id = store.product
INNER JOIN document ON document.id = store.document
INNER JOIN user ON user.id = store.user
INNER JOIN productName ON productName.id = store.product
INNER JOIN unitDict ON unitDict.id = product.unit;

CREATE TABLE user (
	id INT NOT NULL UNIQUE AUTO_INCREMENT PRIMARY KEY, 
	name VARCHAR(255),
	password VARCHAR(255)
);

CREATE VIEW workerList
AS SELECT
    id,
    concat_ws(' ', name, surname) AS name,
    concat_ws(' ', address, city) AS address,
    phone
FROM worker;

CREATE TABLE worker (
	id INT NOT NULL UNIQUE AUTO_INCREMENT PRIMARY KEY, 
	name VARCHAR(255), 
	surname VARCHAR(255), 
	address VARCHAR(255), 
	city VARCHAR(255), 
	phone VARCHAR(255)
);

CREATE TABLE production (
	id INT NOT NULL UNIQUE AUTO_INCREMENT PRIMARY KEY, 
	document INT NOT NULL, 
	worker INT NOT NULL, 
	date DATETIME NOT NULL, 		
	state INT NOT NULL, 
	qty_in FLOAT, 
	qty_out FLOAT, 
	product INT NOT NULL, 
	user	INT NOT NULL,
        FOREIGN KEY (document) REFERENCES document(id) ON DELETE CASCADE,
	FOREIGN KEY (worker) REFERENCES worker(id) ON DELETE CASCADE, 
	FOREIGN KEY (state) REFERENCES stateDict(id) ON DELETE CASCADE, 
        FOREIGN KEY (product) REFERENCES product(id) ON DELETE CASCADE,
	FOREIGN KEY (user) REFERENCES user(id) ON DELETE CASCADE 	
);

CREATE VIEW productionList AS
  SELECT
    production.id,
    document.number,
    stateDict.name,
    concat_ws(' ', worker.name, worker.surname) AS worker,
    production.worker AS workerID
   FROM production
   INNER JOIN stateDict ON stateDict.id = production.state
   INNER JOIN document ON document.id = production.document
   INNER JOIN worker ON worker.id = production.worker;

INSERT INTO `colorDict` (`id`, `name`) VALUES
(0, NULL),
(1, 'czerwony'),
(2, 'niebieski'),
(3, 'biały'),
(4, 'czarny');

INSERT INTO `documentDict` (`id`, `name`) VALUES
(0, NULL),
(1, 'FV'),
(2, 'WZ');

INSERT INTO `documents` (`id`, `numer`, `date`, `type`) VALUES
(1, '1/2016', '2016-11-02', 1);

INSERT INTO `finishDict` (`id`, `name`) VALUES
(0, NULL),
(1, 'złoty'),
(2, 'srebrny'),
(3, 'ox');

INSERT INTO `materialDict` (`id`, `name`) VALUES
(0, NULL),
(1, 'szkło'),
(2, 'metal'),
(3, 'drewno'),
(4, 'plastik');

INSERT INTO `productDict` (`id`, `name`) VALUES
(0, ''),
(1, 'krzyżyk'),
(2, 'szpilka'),
(3, 'łącznik'),
(4, 'łańcuch');

INSERT INTO `products` (`id`, `name`, `type`, `material`, `finish`, `color`, `symbol`, `alarm_min`, `alarm_max`, `photo`, `comment`, `upw`) VALUES
(1, 1, 0, 2, 2, 0, 'KR-001', NULL, NULL, NULL, NULL, NULL),
(2, 2, 11, 2, 3, 0, 'SP-001', NULL, NULL, NULL, NULL, NULL),
(3, 3, 0, 2, 3, 0, 'L-01', NULL, NULL, NULL, NULL, NULL);

INSERT INTO `stateDict` (`id`, `name`) VALUES
(0, NULL);

INSERT INTO `store` (`id`, `product`, `quantity`, `unit`, `date`, `document`) VALUES
(1, 1, 100, 1, '2016-11-02 00:00:00', 1),
(2, 2, 200, 1, '2016-11-02 00:00:00', 1),
(3, 3, 300, 1, '2016-11-02 00:00:00', 1);

INSERT INTO `typeDict` (`id`, `name`) VALUES
(0, NULL),
(8, '8 mm'),
(9, '10 mm'),
(10, '12 mm'),
(11, '1.2 mm');

INSERT INTO `unitDict` (`id`, `name`) VALUES
(0, NULL),
(1, 'szt'),
(2, 'gr'),
(3, 'kg');

INSERT INTO `user` (`id`, `name`, `password`) VALUES
(1, 'Lukasz K', NULL);


SET SESSION SQL_MODE = "NO_AUTO_VALUE_ON_ZERO";
INSERT INTO worker VALUES ('0', NULL, NULL, NULL, NULL, NULL);
INSERT INTO `worker` (`id`, `name`, `surname`, `address`, `city`, `phone`) VALUES
(1, 'Jan', 'Kowalski', NULL, NULL, '111111'),
(2, 'Janina', 'Kowalska', NULL, NULL, '222222');

INSERT INTO stateDict VALUES(1, 'magazyn');
INSERT INTO stateDict VALUES(2, 'produkcja');
INSERT INTO stateDict VALUES(3, 'gotowe');
INSERT INTO stateDict VALUES(4, 'anulowane');
INSERT INTO stateDict VALUES(5, 'zwrocone');


###############
###############     WYCOFANE
###############

### Aktualnie nieuzywane, zastapione view z jedna nazwa ->> productList
CREATE VIEW products_view
AS SELECT
    products.id,
    productDict.name AS name,
    typeDict.name AS type,
    materialDict.name AS material,
    finishDict.name AS finish,
    colorDict.name AS color,
    products.symbol,
    products.alarm_min,
    products.alarm_max,
    products.comment,
    products.upw
FROM products
INNER JOIN productDict ON productDict.id = products.name
INNER JOIN typeDict ON typeDict.id = products.type
INNER JOIN materialDict ON materialDict.id = products.material
INNER JOIN finishDict ON finishDict.id = products.finish
INNER JOIN colorDict ON colorDict.id = products.color;

#### Aktualnie nieuzyweane ( w polu name musi byc wpis brak, zastapione przez NULL) ->> productList
CREATE VIEW pv
AS SELECT
    products.id,
    concat_ws(' ',
        IF(productDict.name='brak', NULL, productDict.name),
        IF(typeDict.name='brak', NULL, typeDict.name),
        IF(materialDict.name='brak', NULL, materialDict.name),
        IF(finishDict.name='brak', NULL, finishDict.name),
        IF(colorDict.name='brak', NULL, colorDict.name)
    ) AS name,
    products.symbol,
    products.alarm_min,
    products.alarm_max,
    products.comment,
    products.upw
FROM products
INNER JOIN productDict ON productDict.id = products.name
INNER JOIN typeDict ON typeDict.id = products.type
INNER JOIN materialDict ON materialDict.id = products.material
INNER JOIN finishDict ON finishDict.id = products.finish
INNER JOIN colorDict ON colorDict.id = products.color;

CREATE VIEW worker_view
AS SELECT
    concat_ws(' ', name, surname) AS name,
    concat_ws(' ', address, city) AS address,
    phone
FROM worker;
